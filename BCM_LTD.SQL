--
-- Create Schema Script 
--   Database Version          : 11.2.0.2.0 
--   Database Compatible Level : 11.2.0.0.0 
--   Script Compatible Level   : 11.2.0.0.0 
--   Toad Version              : 11.6.0.43 
--   DB Connect String         : XE 
--   Schema                    : BCM 
--   Script Created by         : BCM 
--   Script Created at         : 18/10/2020 17:05:41 
--   Physical Location         :  
--   Notes                     :  
--

-- Object Counts: 
--   Roles: 3           Sys Privs: 203      Roles: 12            
--   Users: 1           Sys Privs: 200      Roles: 3             
--   Tablespaces: 2     DataFiles: 1        TempFiles: 1 
-- 
--   Directories: 5 
--   Indexes: 13        Columns: 25         
--   Object Privileges: 30 
--   Packages: 1        Lines of Code: 36 
--   Package Bodies: 1  Lines of Code: 433 
--   Queues: 8 
--   Sequences: 4 
--   Synonyms: 9 
--   Tables: 14         Columns: 111        Constraints: 51     
--   Triggers: 6 
--   Types: 3 


-- "Set define off" turns off substitution variables. 
Set define off; 

--
-- SYSTEM  (Tablespace) 
--
CREATE TABLESPACE SYSTEM DATAFILE 
  'C:\ORACLEXE\APP\ORACLE\ORADATA\XE\SYSTEM.DBF' SIZE 460M AUTOEXTEND ON NEXT 10M MAXSIZE 600M
LOGGING
ONLINE
EXTENT MANAGEMENT LOCAL AUTOALLOCATE
BLOCKSIZE 8K
FLASHBACK ON;


--
-- TEMP  (Tablespace) 
--
CREATE TEMPORARY TABLESPACE TEMP TEMPFILE 
  'C:\ORACLEXE\APP\ORACLE\ORADATA\XE\TEMP.DBF' SIZE 20M AUTOEXTEND ON NEXT 640K MAXSIZE UNLIMITED
TABLESPACE GROUP ''
EXTENT MANAGEMENT LOCAL UNIFORM SIZE 1M;


--
-- "DEFAULT"  (Profile) 
--
CREATE PROFILE "DEFAULT" LIMIT
  SESSIONS_PER_USER UNLIMITED
  CPU_PER_SESSION UNLIMITED
  CPU_PER_CALL UNLIMITED
  CONNECT_TIME UNLIMITED
  IDLE_TIME UNLIMITED
  LOGICAL_READS_PER_SESSION UNLIMITED
  LOGICAL_READS_PER_CALL UNLIMITED
  COMPOSITE_LIMIT UNLIMITED
  PRIVATE_SGA UNLIMITED
  FAILED_LOGIN_ATTEMPTS UNLIMITED
  PASSWORD_LIFE_TIME UNLIMITED
  PASSWORD_REUSE_TIME UNLIMITED
  PASSWORD_REUSE_MAX UNLIMITED
  PASSWORD_LOCK_TIME 1
  PASSWORD_GRACE_TIME 7
  PASSWORD_VERIFY_FUNCTION NULL;


--
-- CONNECT  (Role) 
--
CREATE ROLE CONNECT NOT IDENTIFIED;

GRANT CREATE SESSION TO CONNECT;


--
-- DBA  (Role) 
--
CREATE ROLE DBA NOT IDENTIFIED;

GRANT ALTER ON BCM.SUPPLIER_TBL TO BCM;
GRANT DELETE ON BCM.SUPPLIER_TBL TO BCM;
GRANT INSERT ON BCM.SUPPLIER_TBL TO BCM;
GRANT SELECT ON BCM.SUPPLIER_TBL TO BCM;
GRANT UPDATE ON BCM.SUPPLIER_TBL TO BCM;
GRANT EXECUTE ON BCM.BCM TO BCM;
GRANT DEBUG ON BCM.BCM TO BCM;
GRANT DROP ANY CUBE BUILD PROCESS TO DBA WITH ADMIN OPTION;
GRANT CREATE CUBE TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY CUBE DIMENSION TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY MINING MODEL TO DBA WITH ADMIN OPTION;
GRANT DROP ANY MINING MODEL TO DBA WITH ADMIN OPTION;
GRANT DROP ANY EDITION TO DBA WITH ADMIN OPTION;
GRANT CHANGE NOTIFICATION TO DBA WITH ADMIN OPTION;
GRANT ADMINISTER ANY SQL TUNING SET TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY SQL PROFILE TO DBA WITH ADMIN OPTION;
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_RULE_OBJ,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
GRANT EXPORT FULL DATABASE TO DBA WITH ADMIN OPTION;
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.EXECUTE_ANY_EVALUATION_CONTEXT,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
BEGIN
SYS.DBMS_AQADM.GRANT_SYSTEM_PRIVILEGE (
  PRIVILEGE    => 'DEQUEUE_ANY',
  GRANTEE      => 'DBA',
  ADMIN_OPTION => TRUE);
END;
/
GRANT DROP ANY INDEXTYPE TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY INDEXTYPE TO DBA WITH ADMIN OPTION;
GRANT EXECUTE ANY LIBRARY TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY LIBRARY TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY DIRECTORY TO DBA WITH ADMIN OPTION;
GRANT ALTER PROFILE TO DBA WITH ADMIN OPTION;
GRANT EXECUTE ANY PROCEDURE TO DBA WITH ADMIN OPTION;
GRANT CREATE ROLE TO DBA WITH ADMIN OPTION;
GRANT SELECT ANY SEQUENCE TO DBA WITH ADMIN OPTION;
GRANT DROP ANY INDEX TO DBA WITH ADMIN OPTION;
GRANT UPDATE ANY TABLE TO DBA WITH ADMIN OPTION;
GRANT INSERT ANY TABLE TO DBA WITH ADMIN OPTION;
GRANT SELECT ANY TABLE TO DBA WITH ADMIN OPTION;
GRANT DROP ROLLBACK SEGMENT TO DBA WITH ADMIN OPTION;
GRANT BECOME USER TO DBA WITH ADMIN OPTION;
GRANT DROP TABLESPACE TO DBA WITH ADMIN OPTION;
GRANT ALTER SESSION TO DBA WITH ADMIN OPTION;
GRANT CREATE SESSION TO DBA WITH ADMIN OPTION;
GRANT DROP ANY MEASURE FOLDER TO DBA WITH ADMIN OPTION;
GRANT SELECT ANY CUBE TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY CUBE TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY ASSEMBLY TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY EDITION TO DBA WITH ADMIN OPTION;
GRANT ANALYZE ANY DICTIONARY TO DBA WITH ADMIN OPTION;
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.ALTER_ANY_RULE_SET,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_RULE_SET_OBJ,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
GRANT DEBUG ANY PROCEDURE TO DBA WITH ADMIN OPTION;
GRANT CREATE DIMENSION TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY LIBRARY TO DBA WITH ADMIN OPTION;
GRANT UNDER ANY TYPE TO DBA WITH ADMIN OPTION;
GRANT DROP ANY MATERIALIZED VIEW TO DBA WITH ADMIN OPTION;
GRANT DROP ANY TRIGGER TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY PROCEDURE TO DBA WITH ADMIN OPTION;
GRANT FORCE ANY TRANSACTION TO DBA WITH ADMIN OPTION;
GRANT ALTER DATABASE TO DBA WITH ADMIN OPTION;
GRANT DELETE ANY TABLE TO DBA WITH ADMIN OPTION;
GRANT ALTER ROLLBACK SEGMENT TO DBA WITH ADMIN OPTION;
GRANT UPDATE ANY CUBE DIMENSION TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY CUBE BUILD PROCESS TO DBA WITH ADMIN OPTION;
GRANT CREATE CUBE DIMENSION TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY ASSEMBLY TO DBA WITH ADMIN OPTION;
GRANT CREATE ASSEMBLY TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY EDITION TO DBA WITH ADMIN OPTION;
GRANT EXECUTE ANY PROGRAM TO DBA WITH ADMIN OPTION;
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.EXECUTE_ANY_RULE,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
GRANT IMPORT FULL DATABASE TO DBA WITH ADMIN OPTION;
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.EXECUTE_ANY_RULE_SET,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_ANY_RULE_SET,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
GRANT FLASHBACK ANY TABLE TO DBA WITH ADMIN OPTION;
GRANT RESUMABLE TO DBA WITH ADMIN OPTION;
GRANT ADMINISTER DATABASE TRIGGER TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY OUTLINE TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY DIMENSION TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY DIMENSION TO DBA WITH ADMIN OPTION;
GRANT EXECUTE ANY OPERATOR TO DBA WITH ADMIN OPTION;
GRANT CREATE TYPE TO DBA WITH ADMIN OPTION;
GRANT CREATE TRIGGER TO DBA WITH ADMIN OPTION;
GRANT GRANT ANY ROLE TO DBA WITH ADMIN OPTION;
GRANT DROP ANY VIEW TO DBA WITH ADMIN OPTION;
GRANT CREATE VIEW TO DBA WITH ADMIN OPTION;
GRANT LOCK ANY TABLE TO DBA WITH ADMIN OPTION;
GRANT ALTER USER TO DBA WITH ADMIN OPTION;
GRANT CREATE USER TO DBA WITH ADMIN OPTION;
GRANT ALTER TABLESPACE TO DBA WITH ADMIN OPTION;
GRANT CREATE TABLESPACE TO DBA WITH ADMIN OPTION;
GRANT RESTRICTED SESSION TO DBA WITH ADMIN OPTION;
GRANT UPDATE ANY CUBE BUILD PROCESS TO DBA WITH ADMIN OPTION;
GRANT DROP ANY CUBE TO DBA WITH ADMIN OPTION;
GRANT INSERT ANY CUBE DIMENSION TO DBA WITH ADMIN OPTION;
GRANT CREATE MINING MODEL TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY JOB TO DBA WITH ADMIN OPTION;
GRANT CREATE JOB TO DBA WITH ADMIN OPTION;
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_ANY_RULE,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.DROP_ANY_EVALUATION_CONTEXT,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_ANY_EVALUATION_CONTEXT,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_EVALUATION_CONTEXT_OBJ,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
GRANT GRANT ANY OBJECT PRIVILEGE TO DBA WITH ADMIN OPTION;
GRANT SELECT ANY DICTIONARY TO DBA WITH ADMIN OPTION;
GRANT DROP ANY DIMENSION TO DBA WITH ADMIN OPTION;
GRANT UNDER ANY TABLE TO DBA WITH ADMIN OPTION;
GRANT CREATE INDEXTYPE TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY OPERATOR TO DBA WITH ADMIN OPTION;
GRANT DROP ANY LIBRARY TO DBA WITH ADMIN OPTION;
GRANT ANALYZE ANY TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY ROLE TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY SEQUENCE TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY INDEX TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY TABLE TO DBA WITH ADMIN OPTION;
GRANT DELETE ANY MEASURE FOLDER TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY MEASURE FOLDER TO DBA WITH ADMIN OPTION;
GRANT SELECT ANY MINING MODEL TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY MINING MODEL TO DBA WITH ADMIN OPTION;
GRANT MANAGE FILE GROUP TO DBA WITH ADMIN OPTION;
GRANT MANAGE SCHEDULER TO DBA WITH ADMIN OPTION;
BEGIN
SYS.DBMS_RESOURCE_MANAGER_PRIVS.GRANT_SYSTEM_PRIVILEGE
  (GRANTEE_NAME   => 'DBA', 
   PRIVILEGE_NAME => 'ADMINISTER_RESOURCE_MANAGER',
   ADMIN_OPTION   => TRUE);
END;
/
GRANT ALTER ANY OUTLINE TO DBA WITH ADMIN OPTION;
GRANT DROP ANY CONTEXT TO DBA WITH ADMIN OPTION;
GRANT EXECUTE ANY INDEXTYPE TO DBA WITH ADMIN OPTION;
GRANT UNDER ANY VIEW TO DBA WITH ADMIN OPTION;
GRANT DROP ANY TYPE TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY TYPE TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY MATERIALIZED VIEW TO DBA WITH ADMIN OPTION;
GRANT CREATE PROFILE TO DBA WITH ADMIN OPTION;
GRANT DROP PUBLIC DATABASE LINK TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY INDEX TO DBA WITH ADMIN OPTION;
GRANT CREATE CLUSTER TO DBA WITH ADMIN OPTION;
GRANT COMMENT ANY TABLE TO DBA WITH ADMIN OPTION;
GRANT DROP ANY TABLE TO DBA WITH ADMIN OPTION;
GRANT CREATE ROLLBACK SEGMENT TO DBA WITH ADMIN OPTION;
GRANT UNLIMITED TABLESPACE TO DBA WITH ADMIN OPTION;
GRANT AUDIT SYSTEM TO DBA WITH ADMIN OPTION;
GRANT ALTER SYSTEM TO DBA WITH ADMIN OPTION;
GRANT SELECT ANY CUBE DIMENSION TO DBA WITH ADMIN OPTION;
GRANT DELETE ANY CUBE DIMENSION TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY CUBE DIMENSION TO DBA WITH ADMIN OPTION;
GRANT COMMENT ANY MINING MODEL TO DBA WITH ADMIN OPTION;
GRANT EXECUTE ASSEMBLY TO DBA WITH ADMIN OPTION;
GRANT EXECUTE ANY ASSEMBLY TO DBA WITH ADMIN OPTION;
GRANT MANAGE ANY FILE GROUP TO DBA WITH ADMIN OPTION;
GRANT EXECUTE ANY CLASS TO DBA WITH ADMIN OPTION;
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.DROP_ANY_RULE_SET,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
GRANT DEBUG CONNECT SESSION TO DBA WITH ADMIN OPTION;
GRANT ON COMMIT REFRESH TO DBA WITH ADMIN OPTION;
BEGIN
SYS.DBMS_AQADM.GRANT_SYSTEM_PRIVILEGE (
  PRIVILEGE    => 'ENQUEUE_ANY',
  GRANTEE      => 'DBA',
  ADMIN_OPTION => TRUE);
END;
/
GRANT CREATE ANY INDEXTYPE TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY OPERATOR TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY TYPE TO DBA WITH ADMIN OPTION;
GRANT DROP ANY DIRECTORY TO DBA WITH ADMIN OPTION;
GRANT ALTER RESOURCE COST TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY PROCEDURE TO DBA WITH ADMIN OPTION;
GRANT CREATE PROCEDURE TO DBA WITH ADMIN OPTION;
GRANT FORCE TRANSACTION TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY SEQUENCE TO DBA WITH ADMIN OPTION;
GRANT CREATE SEQUENCE TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY VIEW TO DBA WITH ADMIN OPTION;
GRANT DROP PUBLIC SYNONYM TO DBA WITH ADMIN OPTION;
GRANT DROP ANY SYNONYM TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY CLUSTER TO DBA WITH ADMIN OPTION;
GRANT BACKUP ANY TABLE TO DBA WITH ADMIN OPTION;
GRANT CREATE TABLE TO DBA WITH ADMIN OPTION;
GRANT ADMINISTER SQL MANAGEMENT OBJECT TO DBA WITH ADMIN OPTION;
GRANT INSERT ANY MEASURE FOLDER TO DBA WITH ADMIN OPTION;
GRANT UPDATE ANY CUBE TO DBA WITH ADMIN OPTION;
GRANT ADMINISTER SQL TUNING SET TO DBA WITH ADMIN OPTION;
GRANT MERGE ANY VIEW TO DBA WITH ADMIN OPTION;
GRANT DROP ANY OUTLINE TO DBA WITH ADMIN OPTION;
GRANT CREATE OPERATOR TO DBA WITH ADMIN OPTION;
GRANT CREATE LIBRARY TO DBA WITH ADMIN OPTION;
GRANT GRANT ANY PRIVILEGE TO DBA WITH ADMIN OPTION;
GRANT DROP PROFILE TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY TRIGGER TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY TRIGGER TO DBA WITH ADMIN OPTION;
GRANT DROP ANY PROCEDURE TO DBA WITH ADMIN OPTION;
GRANT AUDIT ANY TO DBA WITH ADMIN OPTION;
GRANT DROP ANY ROLE TO DBA WITH ADMIN OPTION;
GRANT DROP ANY SEQUENCE TO DBA WITH ADMIN OPTION;
GRANT CREATE PUBLIC SYNONYM TO DBA WITH ADMIN OPTION;
GRANT CREATE SYNONYM TO DBA WITH ADMIN OPTION;
GRANT DROP ANY CLUSTER TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY TABLE TO DBA WITH ADMIN OPTION;
GRANT FLASHBACK ARCHIVE ADMINISTER TO DBA WITH ADMIN OPTION;
GRANT CREATE CUBE BUILD PROCESS TO DBA WITH ADMIN OPTION;
GRANT CREATE MEASURE FOLDER TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY CUBE TO DBA WITH ADMIN OPTION;
GRANT DROP ANY CUBE DIMENSION TO DBA WITH ADMIN OPTION;
GRANT DROP ANY ASSEMBLY TO DBA WITH ADMIN OPTION;
GRANT CREATE EXTERNAL JOB TO DBA WITH ADMIN OPTION;
GRANT READ ANY FILE GROUP TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY SQL PROFILE TO DBA WITH ADMIN OPTION;
GRANT DROP ANY SQL PROFILE TO DBA WITH ADMIN OPTION;
GRANT SELECT ANY TRANSACTION TO DBA WITH ADMIN OPTION;
GRANT ADVISOR TO DBA WITH ADMIN OPTION;
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.DROP_ANY_RULE,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.ALTER_ANY_RULE,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.ALTER_ANY_EVALUATION_CONTEXT,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
GRANT CREATE ANY CONTEXT TO DBA WITH ADMIN OPTION;
BEGIN
SYS.DBMS_AQADM.GRANT_SYSTEM_PRIVILEGE (
  PRIVILEGE    => 'MANAGE_ANY',
  GRANTEE      => 'DBA',
  ADMIN_OPTION => TRUE);
END;
/
GRANT GLOBAL QUERY REWRITE TO DBA WITH ADMIN OPTION;
GRANT QUERY REWRITE TO DBA WITH ADMIN OPTION;
GRANT DROP ANY OPERATOR TO DBA WITH ADMIN OPTION;
GRANT EXECUTE ANY TYPE TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY MATERIALIZED VIEW TO DBA WITH ADMIN OPTION;
GRANT CREATE MATERIALIZED VIEW TO DBA WITH ADMIN OPTION;
GRANT CREATE PUBLIC DATABASE LINK TO DBA WITH ADMIN OPTION;
GRANT CREATE DATABASE LINK TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY SYNONYM TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY CLUSTER TO DBA WITH ADMIN OPTION;
GRANT DROP USER TO DBA WITH ADMIN OPTION;
GRANT MANAGE TABLESPACE TO DBA WITH ADMIN OPTION;
--
-- DATAPUMP_IMP_FULL_DATABASE  (Role) 
--
GRANT DATAPUMP_IMP_FULL_DATABASE TO DBA;
--
-- SCHEDULER_ADMIN  (Role) 
--
GRANT SCHEDULER_ADMIN TO DBA WITH ADMIN OPTION;
--
-- EXECUTE_CATALOG_ROLE  (Role) 
--
GRANT EXECUTE_CATALOG_ROLE TO DBA WITH ADMIN OPTION;
--
-- DELETE_CATALOG_ROLE  (Role) 
--
GRANT DELETE_CATALOG_ROLE TO DBA WITH ADMIN OPTION;
--
-- PLUSTRACE  (Role) 
--
GRANT PLUSTRACE TO DBA WITH ADMIN OPTION;
--
-- SELECT_CATALOG_ROLE  (Role) 
--
GRANT SELECT_CATALOG_ROLE TO DBA WITH ADMIN OPTION;
--
-- EXP_FULL_DATABASE  (Role) 
--
GRANT EXP_FULL_DATABASE TO DBA;
--
-- GATHER_SYSTEM_STATISTICS  (Role) 
--
GRANT GATHER_SYSTEM_STATISTICS TO DBA;
--
-- DATAPUMP_EXP_FULL_DATABASE  (Role) 
--
GRANT DATAPUMP_EXP_FULL_DATABASE TO DBA;
--
-- XDB_SET_INVOKER  (Role) 
--
GRANT XDB_SET_INVOKER TO DBA;
--
-- IMP_FULL_DATABASE  (Role) 
--
GRANT IMP_FULL_DATABASE TO DBA;
--
-- XDBADMIN  (Role) 
--
GRANT XDBADMIN TO DBA;


--
-- TC_ADMIN_ROLE  (Role) 
--
CREATE ROLE TC_ADMIN_ROLE NOT IDENTIFIED;

GRANT DELETE ON BCM.TC_USERMAPPING TO BCM;
GRANT INSERT ON BCM.TC_USERMAPPING TO BCM;
GRANT SELECT ON BCM.TC_USERMAPPING TO BCM;
GRANT UPDATE ON BCM.TC_USERMAPPING TO BCM;
GRANT DELETE ON BCM.TC_TIMESTAMP TO BCM;
GRANT INSERT ON BCM.TC_TIMESTAMP TO BCM;
GRANT SELECT ON BCM.TC_TIMESTAMP TO BCM;
GRANT UPDATE ON BCM.TC_TIMESTAMP TO BCM;
GRANT SELECT ON BCM.TC_SCRIPT_ID TO BCM;
GRANT DELETE ON BCM.TC_OBJSTATUS_VCS TO BCM;
GRANT INSERT ON BCM.TC_OBJSTATUS_VCS TO BCM;
GRANT SELECT ON BCM.TC_OBJSTATUS_VCS TO BCM;
GRANT UPDATE ON BCM.TC_OBJSTATUS_VCS TO BCM;
GRANT DELETE ON BCM.TC_OBJSTATUS TO BCM;
GRANT INSERT ON BCM.TC_OBJSTATUS TO BCM;
GRANT SELECT ON BCM.TC_OBJSTATUS TO BCM;
GRANT UPDATE ON BCM.TC_OBJSTATUS TO BCM;
GRANT UPDATE (PSL_FROZEN) ON BCM.TC_OBJSTATUS TO TC_ADMIN_ROLE;
GRANT UPDATE (PSL_FROZEN_BY) ON BCM.TC_OBJSTATUS TO TC_ADMIN_ROLE;
GRANT UPDATE (PSL_FROZEN_TIMESTAMP) ON BCM.TC_OBJSTATUS TO TC_ADMIN_ROLE;
GRANT DELETE ON BCM.TC_MASK TO BCM;
GRANT INSERT ON BCM.TC_MASK TO BCM;
GRANT SELECT ON BCM.TC_MASK TO BCM;
GRANT UPDATE ON BCM.TC_MASK TO BCM;
GRANT SELECT ON BCM.TC_GROUP_ID TO BCM;
GRANT DELETE ON BCM.TC_GROUP TO BCM;
GRANT INSERT ON BCM.TC_GROUP TO BCM;
GRANT SELECT ON BCM.TC_GROUP TO BCM;
GRANT UPDATE ON BCM.TC_GROUP TO BCM;
GRANT SELECT ON BCM.TC_FILEEXT TO BCM;
GRANT UPDATE ON BCM.TC_FILEEXT TO BCM;
GRANT DELETE ON BCM.TC_CONFIG TO BCM;
GRANT INSERT ON BCM.TC_CONFIG TO BCM;
GRANT SELECT ON BCM.TC_CONFIG TO BCM;
GRANT UPDATE ON BCM.TC_CONFIG TO BCM;
GRANT DELETE ON BCM.TC_ALL_OBJ_MASK TO BCM;
GRANT INSERT ON BCM.TC_ALL_OBJ_MASK TO BCM;
GRANT SELECT ON BCM.TC_ALL_OBJ_MASK TO BCM;
GRANT UPDATE ON BCM.TC_ALL_OBJ_MASK TO BCM;
GRANT DELETE ON BCM.TC_ALL_OBJECTS TO BCM;
GRANT INSERT ON BCM.TC_ALL_OBJECTS TO BCM;
GRANT SELECT ON BCM.TC_ALL_OBJECTS TO BCM;
GRANT UPDATE ON BCM.TC_ALL_OBJECTS TO BCM;


--
-- BCM  (User) 
--
CREATE USER BCM
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE SYSTEM
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  ACCOUNT UNLOCK;
  -- 3 Roles for BCM 
  GRANT CONNECT TO BCM;
  GRANT DBA TO BCM;
  GRANT TC_ADMIN_ROLE TO BCM WITH ADMIN OPTION;
  ALTER USER BCM DEFAULT ROLE DBA, TC_ADMIN_ROLE;
  -- 200 System Privileges for BCM 
  GRANT ADMINISTER ANY SQL TUNING SET TO BCM;
  GRANT ADMINISTER DATABASE TRIGGER TO BCM;
  BEGIN
SYS.DBMS_RESOURCE_MANAGER_PRIVS.GRANT_SYSTEM_PRIVILEGE
  (GRANTEE_NAME   => 'BCM', 
   PRIVILEGE_NAME => 'ADMINISTER_RESOURCE_MANAGER',
   ADMIN_OPTION   => FALSE);
END;
/
  GRANT ADMINISTER SQL MANAGEMENT OBJECT TO BCM;
  GRANT ADMINISTER SQL TUNING SET TO BCM;
  GRANT ADVISOR TO BCM;
  GRANT ALTER ANY ASSEMBLY TO BCM;
  GRANT ALTER ANY CLUSTER TO BCM;
  GRANT ALTER ANY CUBE TO BCM;
  GRANT ALTER ANY CUBE DIMENSION TO BCM;
  GRANT ALTER ANY DIMENSION TO BCM;
  GRANT ALTER ANY EDITION TO BCM;
  BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.ALTER_ANY_EVALUATION_CONTEXT,
  GRANTEE      => 'BCM',
  GRANT_OPTION => FALSE);
END;
/
  GRANT ALTER ANY INDEX TO BCM;
  GRANT ALTER ANY INDEXTYPE TO BCM;
  GRANT ALTER ANY LIBRARY TO BCM;
  GRANT ALTER ANY MATERIALIZED VIEW TO BCM;
  GRANT ALTER ANY MINING MODEL TO BCM;
  GRANT ALTER ANY OPERATOR TO BCM;
  GRANT ALTER ANY OUTLINE TO BCM;
  GRANT ALTER ANY PROCEDURE TO BCM;
  GRANT ALTER ANY ROLE TO BCM;
  BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.ALTER_ANY_RULE,
  GRANTEE      => 'BCM',
  GRANT_OPTION => FALSE);
END;
/
  BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.ALTER_ANY_RULE_SET,
  GRANTEE      => 'BCM',
  GRANT_OPTION => FALSE);
END;
/
  GRANT ALTER ANY SEQUENCE TO BCM;
  GRANT ALTER ANY SQL PROFILE TO BCM;
  GRANT ALTER ANY TABLE TO BCM;
  GRANT ALTER ANY TRIGGER TO BCM;
  GRANT ALTER ANY TYPE TO BCM;
  GRANT ALTER DATABASE TO BCM;
  GRANT ALTER PROFILE TO BCM;
  GRANT ALTER RESOURCE COST TO BCM;
  GRANT ALTER ROLLBACK SEGMENT TO BCM;
  GRANT ALTER SESSION TO BCM;
  GRANT ALTER SYSTEM TO BCM;
  GRANT ALTER TABLESPACE TO BCM;
  GRANT ALTER USER TO BCM;
  GRANT ANALYZE ANY TO BCM;
  GRANT AUDIT ANY TO BCM;
  GRANT AUDIT SYSTEM TO BCM;
  GRANT BACKUP ANY TABLE TO BCM;
  GRANT BECOME USER TO BCM;
  GRANT CHANGE NOTIFICATION TO BCM;
  GRANT COMMENT ANY MINING MODEL TO BCM;
  GRANT COMMENT ANY TABLE TO BCM;
  GRANT CREATE ANY ASSEMBLY TO BCM;
  GRANT CREATE ANY CLUSTER TO BCM;
  GRANT CREATE ANY CONTEXT TO BCM;
  GRANT CREATE ANY CUBE TO BCM;
  GRANT CREATE ANY CUBE BUILD PROCESS TO BCM;
  GRANT CREATE ANY CUBE DIMENSION TO BCM;
  GRANT CREATE ANY DIMENSION TO BCM;
  GRANT CREATE ANY DIRECTORY TO BCM;
  GRANT CREATE ANY EDITION TO BCM;
  BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_ANY_EVALUATION_CONTEXT,
  GRANTEE      => 'BCM',
  GRANT_OPTION => FALSE);
END;
/
  GRANT CREATE ANY INDEX TO BCM;
  GRANT CREATE ANY INDEXTYPE TO BCM;
  GRANT CREATE ANY JOB TO BCM;
  GRANT CREATE ANY LIBRARY TO BCM;
  GRANT CREATE ANY MATERIALIZED VIEW TO BCM;
  GRANT CREATE ANY MEASURE FOLDER TO BCM;
  GRANT CREATE ANY MINING MODEL TO BCM;
  GRANT CREATE ANY OPERATOR TO BCM;
  GRANT CREATE ANY OUTLINE TO BCM;
  GRANT CREATE ANY PROCEDURE TO BCM;
  BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_ANY_RULE,
  GRANTEE      => 'BCM',
  GRANT_OPTION => FALSE);
END;
/
  BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_ANY_RULE_SET,
  GRANTEE      => 'BCM',
  GRANT_OPTION => FALSE);
END;
/
  GRANT CREATE ANY SEQUENCE TO BCM;
  GRANT CREATE ANY SQL PROFILE TO BCM;
  GRANT CREATE ANY SYNONYM TO BCM;
  GRANT CREATE ANY TABLE TO BCM;
  GRANT CREATE ANY TRIGGER TO BCM;
  GRANT CREATE ANY TYPE TO BCM;
  GRANT CREATE ANY VIEW TO BCM;
  GRANT CREATE ASSEMBLY TO BCM;
  GRANT CREATE CLUSTER TO BCM;
  GRANT CREATE CUBE TO BCM;
  GRANT CREATE CUBE BUILD PROCESS TO BCM;
  GRANT CREATE CUBE DIMENSION TO BCM;
  GRANT CREATE DATABASE LINK TO BCM;
  GRANT CREATE DIMENSION TO BCM;
  BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_EVALUATION_CONTEXT_OBJ,
  GRANTEE      => 'BCM',
  GRANT_OPTION => FALSE);
END;
/
  GRANT CREATE EXTERNAL JOB TO BCM;
  GRANT CREATE INDEXTYPE TO BCM;
  GRANT CREATE JOB TO BCM;
  GRANT CREATE LIBRARY TO BCM;
  GRANT CREATE MATERIALIZED VIEW TO BCM;
  GRANT CREATE MEASURE FOLDER TO BCM;
  GRANT CREATE MINING MODEL TO BCM;
  GRANT CREATE OPERATOR TO BCM;
  GRANT CREATE PROCEDURE TO BCM;
  GRANT CREATE PROFILE TO BCM;
  GRANT CREATE PUBLIC DATABASE LINK TO BCM;
  GRANT CREATE PUBLIC SYNONYM TO BCM;
  GRANT CREATE ROLE TO BCM;
  GRANT CREATE ROLLBACK SEGMENT TO BCM;
  BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_RULE_OBJ,
  GRANTEE      => 'BCM',
  GRANT_OPTION => FALSE);
END;
/
  BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_RULE_SET_OBJ,
  GRANTEE      => 'BCM',
  GRANT_OPTION => FALSE);
END;
/
  GRANT CREATE SEQUENCE TO BCM;
  GRANT CREATE SESSION TO BCM;
  GRANT CREATE SYNONYM TO BCM;
  GRANT CREATE TABLE TO BCM;
  GRANT CREATE TABLESPACE TO BCM;
  GRANT CREATE TRIGGER TO BCM;
  GRANT CREATE TYPE TO BCM;
  GRANT CREATE USER TO BCM;
  GRANT CREATE VIEW TO BCM;
  GRANT DEBUG ANY PROCEDURE TO BCM;
  GRANT DEBUG CONNECT SESSION TO BCM;
  GRANT DELETE ANY CUBE DIMENSION TO BCM;
  GRANT DELETE ANY MEASURE FOLDER TO BCM;
  GRANT DELETE ANY TABLE TO BCM;
  BEGIN
SYS.DBMS_AQADM.GRANT_SYSTEM_PRIVILEGE (
  PRIVILEGE    => 'DEQUEUE_ANY',
  GRANTEE      => 'BCM',
  ADMIN_OPTION => FALSE);
END;
/
  GRANT DROP ANY ASSEMBLY TO BCM;
  GRANT DROP ANY CLUSTER TO BCM;
  GRANT DROP ANY CONTEXT TO BCM;
  GRANT DROP ANY CUBE TO BCM;
  GRANT DROP ANY CUBE BUILD PROCESS TO BCM;
  GRANT DROP ANY CUBE DIMENSION TO BCM;
  GRANT DROP ANY DIMENSION TO BCM;
  GRANT DROP ANY DIRECTORY TO BCM;
  GRANT DROP ANY EDITION TO BCM;
  BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.DROP_ANY_EVALUATION_CONTEXT,
  GRANTEE      => 'BCM',
  GRANT_OPTION => FALSE);
END;
/
  GRANT DROP ANY INDEX TO BCM;
  GRANT DROP ANY INDEXTYPE TO BCM;
  GRANT DROP ANY LIBRARY TO BCM;
  GRANT DROP ANY MATERIALIZED VIEW TO BCM;
  GRANT DROP ANY MEASURE FOLDER TO BCM;
  GRANT DROP ANY MINING MODEL TO BCM;
  GRANT DROP ANY OPERATOR TO BCM;
  GRANT DROP ANY OUTLINE TO BCM;
  GRANT DROP ANY PROCEDURE TO BCM;
  GRANT DROP ANY ROLE TO BCM;
  BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.DROP_ANY_RULE,
  GRANTEE      => 'BCM',
  GRANT_OPTION => FALSE);
END;
/
  BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.DROP_ANY_RULE_SET,
  GRANTEE      => 'BCM',
  GRANT_OPTION => FALSE);
END;
/
  GRANT DROP ANY SEQUENCE TO BCM;
  GRANT DROP ANY SQL PROFILE TO BCM;
  GRANT DROP ANY SYNONYM TO BCM;
  GRANT DROP ANY TABLE TO BCM;
  GRANT DROP ANY TRIGGER TO BCM;
  GRANT DROP ANY TYPE TO BCM;
  GRANT DROP ANY VIEW TO BCM;
  GRANT DROP PROFILE TO BCM;
  GRANT DROP PUBLIC DATABASE LINK TO BCM;
  GRANT DROP PUBLIC SYNONYM TO BCM;
  GRANT DROP ROLLBACK SEGMENT TO BCM;
  GRANT DROP TABLESPACE TO BCM;
  GRANT DROP USER TO BCM;
  BEGIN
SYS.DBMS_AQADM.GRANT_SYSTEM_PRIVILEGE (
  PRIVILEGE    => 'ENQUEUE_ANY',
  GRANTEE      => 'BCM',
  ADMIN_OPTION => FALSE);
END;
/
  GRANT EXECUTE ANY ASSEMBLY TO BCM;
  GRANT EXECUTE ANY CLASS TO BCM;
  BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.EXECUTE_ANY_EVALUATION_CONTEXT,
  GRANTEE      => 'BCM',
  GRANT_OPTION => FALSE);
END;
/
  GRANT EXECUTE ANY INDEXTYPE TO BCM;
  GRANT EXECUTE ANY LIBRARY TO BCM;
  GRANT EXECUTE ANY OPERATOR TO BCM;
  GRANT EXECUTE ANY PROCEDURE TO BCM;
  GRANT EXECUTE ANY PROGRAM TO BCM;
  BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.EXECUTE_ANY_RULE,
  GRANTEE      => 'BCM',
  GRANT_OPTION => FALSE);
END;
/
  BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.EXECUTE_ANY_RULE_SET,
  GRANTEE      => 'BCM',
  GRANT_OPTION => FALSE);
END;
/
  GRANT EXECUTE ANY TYPE TO BCM;
  GRANT EXECUTE ASSEMBLY TO BCM;
  GRANT EXPORT FULL DATABASE TO BCM;
  GRANT FLASHBACK ANY TABLE TO BCM;
  GRANT FLASHBACK ARCHIVE ADMINISTER TO BCM;
  GRANT FORCE ANY TRANSACTION TO BCM;
  GRANT FORCE TRANSACTION TO BCM;
  GRANT GLOBAL QUERY REWRITE TO BCM;
  GRANT GRANT ANY OBJECT PRIVILEGE TO BCM;
  GRANT GRANT ANY PRIVILEGE TO BCM;
  GRANT GRANT ANY ROLE TO BCM;
  GRANT IMPORT FULL DATABASE TO BCM;
  GRANT INSERT ANY CUBE DIMENSION TO BCM;
  GRANT INSERT ANY MEASURE FOLDER TO BCM;
  GRANT INSERT ANY TABLE TO BCM;
  GRANT LOCK ANY TABLE TO BCM;
  GRANT MANAGE ANY FILE GROUP TO BCM;
  BEGIN
SYS.DBMS_AQADM.GRANT_SYSTEM_PRIVILEGE (
  PRIVILEGE    => 'MANAGE_ANY',
  GRANTEE      => 'BCM',
  ADMIN_OPTION => FALSE);
END;
/
  GRANT MANAGE FILE GROUP TO BCM;
  GRANT MANAGE SCHEDULER TO BCM;
  GRANT MANAGE TABLESPACE TO BCM;
  GRANT MERGE ANY VIEW TO BCM;
  GRANT ON COMMIT REFRESH TO BCM;
  GRANT QUERY REWRITE TO BCM;
  GRANT READ ANY FILE GROUP TO BCM;
  GRANT RESTRICTED SESSION TO BCM;
  GRANT RESUMABLE TO BCM;
  GRANT SELECT ANY CUBE TO BCM;
  GRANT SELECT ANY CUBE DIMENSION TO BCM;
  GRANT SELECT ANY MINING MODEL TO BCM;
  GRANT SELECT ANY SEQUENCE TO BCM;
  GRANT SELECT ANY TABLE TO BCM;
  GRANT SELECT ANY TRANSACTION TO BCM;
  GRANT UNDER ANY TABLE TO BCM;
  GRANT UNDER ANY TYPE TO BCM;
  GRANT UNDER ANY VIEW TO BCM;
  GRANT UNLIMITED TABLESPACE TO BCM;
  GRANT UPDATE ANY CUBE TO BCM;
  GRANT UPDATE ANY CUBE BUILD PROCESS TO BCM;
  GRANT UPDATE ANY CUBE DIMENSION TO BCM;
  GRANT UPDATE ANY TABLE TO BCM;


--
-- PO_TYPE  (Type) 
--
CREATE OR REPLACE TYPE BCM.po_type AS OBJECT
(
   PO VARCHAR2 (5),
   PO_DT VARCHAR2 (50),
   SUPP_NAME VARCHAR2 (255),
   PO_AMT VARCHAR2 (100),
   PO_STATUS VARCHAR2 (50),
   INVOICE_REF VARCHAR2 (255)
);
/

--
-- T_TEXT  (Type) 
--
CREATE OR REPLACE TYPE BCM.t_text IS TABLE OF VARCHAR2(256)  ;

---DROP TYPE t_text FORCE;
/

--
-- MYDIR  (Directory) 
--
CREATE OR REPLACE DIRECTORY 
MYDIR AS 
'C:\Users\user\Desktop\Races';


--
-- ORACLECLRDIR  (Directory) 
--
CREATE OR REPLACE DIRECTORY 
ORACLECLRDIR AS 
'C:\oraclexe\app\oracle\product\11.2.0\server\bin\clr';


--
-- DATA_PUMP_DIR  (Directory) 
--
CREATE OR REPLACE DIRECTORY 
DATA_PUMP_DIR AS 
'C:\oraclexe\app\oracle/admin/xe/dpdump/';


--
-- XMLDIR  (Directory) 
--
CREATE OR REPLACE DIRECTORY 
XMLDIR AS 
'C:\oraclexe\app\oracle\product\11.2.0\server\rdbms\xml';


--
-- ORACLE_OCM_CONFIG_DIR  (Directory) 
--
CREATE OR REPLACE DIRECTORY 
ORACLE_OCM_CONFIG_DIR AS 
'C:\ADE\aime_xe28\oracle/ccr/state';


--
-- SEQ_INV  (Sequence) 
--
CREATE SEQUENCE BCM.SEQ_INV
  START WITH 453
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- SEQ_SUPP  (Sequence) 
--
CREATE SEQUENCE BCM.SEQ_SUPP
  START WITH 913
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- TC_GROUP_ID  (Sequence) 
--
CREATE SEQUENCE BCM.TC_GROUP_ID
  START WITH 1
  MAXVALUE 2147483647
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- TC_SCRIPT_ID  (Sequence) 
--
CREATE SEQUENCE BCM.TC_SCRIPT_ID
  START WITH -10
  INCREMENT BY -1
  MAXVALUE -10
  MINVALUE -2147483648
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- SUPPLIER_TBL  (Table) 
--
CREATE TABLE BCM.SUPPLIER_TBL
(
  SUPP_ID          VARCHAR2(5 BYTE)             NOT NULL,
  SUPP_NAME        VARCHAR2(100 BYTE)           NOT NULL,
  SUPP_CNTCT_NAME  VARCHAR2(100 BYTE),
  SUPP_ADDR        VARCHAR2(255 BYTE),
  SUPP_CNTCT_NUM1  VARCHAR2(15 BYTE),
  SUPP_CNTCT_NUM2  VARCHAR2(15 BYTE),
  SUPP_EMAIL       VARCHAR2(255 BYTE)
)
TABLESPACE SYSTEM
RESULT_CACHE (MODE DEFAULT)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOCOMPRESS ;


--
-- PO_HDR_TBL  (Table) 
--
CREATE TABLE BCM.PO_HDR_TBL
(
  PO_ID      VARCHAR2(5 BYTE)                   NOT NULL,
  PO_DATE    DATE                               NOT NULL,
  SUPP_ID    VARCHAR2(5 BYTE)                   NOT NULL,
  PO_DESCR   VARCHAR2(100 BYTE),
  PO_AMT     NUMBER,
  PO_STATUS  VARCHAR2(10 BYTE),
  PO_REF     VARCHAR2(20 BYTE)
)
TABLESPACE SYSTEM
RESULT_CACHE (MODE DEFAULT)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOCOMPRESS ;


--
-- INVOICE_TBL  (Table) 
--
CREATE TABLE BCM.INVOICE_TBL
(
  INVOICE_ID       VARCHAR2(6 BYTE)             NOT NULL,
  PO_ID            VARCHAR2(5 BYTE)             NOT NULL,
  PO_LINE          NUMBER                       NOT NULL,
  INVOICE_REF      VARCHAR2(20 BYTE)            NOT NULL,
  INVOICE_DATE     DATE,
  INVOICE_STATUS   VARCHAR2(10 BYTE),
  INV_HOLD_REASON  VARCHAR2(255 BYTE),
  INVOICE_AMT      NUMBER,
  INVOICE_DESCR    VARCHAR2(255 BYTE),
  PO_REF           VARCHAR2(20 BYTE)
)
TABLESPACE SYSTEM
RESULT_CACHE (MODE DEFAULT)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOCOMPRESS ;


--
-- PO_LINE_TBL  (Table) 
--
CREATE TABLE BCM.PO_LINE_TBL
(
  PO_ID         VARCHAR2(5 BYTE)                NOT NULL,
  PO_LINE       NUMBER                          NOT NULL,
  PO_DATE       DATE                            NOT NULL,
  PO_DESCR      VARCHAR2(100 BYTE),
  PO_AMT        NUMBER,
  PO_LN_AMT     NUMBER,
  PO_LN_STATUS  VARCHAR2(10 BYTE),
  PO_REF        VARCHAR2(20 BYTE)
)
TABLESPACE SYSTEM
RESULT_CACHE (MODE DEFAULT)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOCOMPRESS ;


--
-- TC_FILEEXT  (Table) 
--
CREATE TABLE BCM.TC_FILEEXT
(
  VCS_OBJTYPE  VARCHAR2(20 BYTE)                NOT NULL,
  VCS_OBJEXT   VARCHAR2(10 BYTE)                NOT NULL
)
TABLESPACE SYSTEM
RESULT_CACHE (MODE DEFAULT)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOCOMPRESS ;


--
-- TC_OBJSTATUS  (Table) 
--
CREATE TABLE BCM.TC_OBJSTATUS
(
  PSL_OBJECT_ID            NUMBER,
  PSL_OBJECT_TYPE          VARCHAR2(12 BYTE)    NOT NULL,
  PSL_OBJECT_OWNER         VARCHAR2(30 BYTE)    NOT NULL,
  PSL_OBJECT_NAME          VARCHAR2(2000 BYTE)  NOT NULL,
  PSL_CHECKED_OUT          VARCHAR2(1 BYTE)     NOT NULL,
  PSL_CHECKED_OUT_BY       VARCHAR2(30 BYTE)    NOT NULL,
  PSL_CHECK_OUT_TIMESTAMP  DATE                 NOT NULL,
  PSL_CHECK_IN_TIMESTAMP   DATE,
  PSL_FROZEN               VARCHAR2(1 BYTE)     NOT NULL,
  PSL_FROZEN_BY            VARCHAR2(30 BYTE),
  PSL_FROZEN_TIMESTAMP     DATE,
  PSL_COMMENTS             VARCHAR2(2000 BYTE)
)
TABLESPACE SYSTEM
RESULT_CACHE (MODE DEFAULT)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOCOMPRESS ;


--
-- TC_OBJSTATUS_VCS  (Table) 
--
CREATE TABLE BCM.TC_OBJSTATUS_VCS
(
  PSL_OBJECT_ID  NUMBER                         NOT NULL,
  PROJECT_ID     NUMBER,
  FILENAME       VARCHAR2(2000 BYTE),
  LOCKED_BY      VARCHAR2(255 BYTE)
)
TABLESPACE SYSTEM
RESULT_CACHE (MODE DEFAULT)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOCOMPRESS ;


--
-- TC_GROUP  (Table) 
--
CREATE TABLE BCM.TC_GROUP
(
  PROJECT_ID             NUMBER                 NOT NULL,
  PROJECT_NAME           VARCHAR2(255 BYTE)     NOT NULL,
  WORKDIR                VARCHAR2(2000 BYTE),
  CREATION_DATE          DATE                   NOT NULL,
  LAST_MODIFIED_DATE     DATE,
  AUTHOR                 VARCHAR2(30 BYTE),
  CHECKED_OUT            INTEGER,
  CHECKED_OUT_TIMESTAMP  DATE,
  CHECKED_OUT_BY         VARCHAR2(30 BYTE),
  CHECKED_IN_TIMESTAMP   DATE,
  VCP_PROJECT            VARCHAR2(2000 BYTE),
  VCS_DB                 VARCHAR2(2000 BYTE),
  FROZEN                 VARCHAR2(1 BYTE)       DEFAULT 'N',
  FROZEN_BY              VARCHAR2(30 BYTE),
  FROZEN_TIMESTAMP       DATE,
  VERSION                VARCHAR2(6 BYTE)
)
TABLESPACE SYSTEM
RESULT_CACHE (MODE DEFAULT)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOCOMPRESS ;


--
-- TC_MASK  (Table) 
--
CREATE TABLE BCM.TC_MASK
(
  PROJECT_ID   NUMBER                           NOT NULL,
  OBJECT_NAME  VARCHAR2(2000 BYTE)              NOT NULL,
  OBJECT_TYPE  NUMBER                           NOT NULL,
  SCHEMA_NAME  VARCHAR2(30 BYTE)                NOT NULL,
  EXCLUDE      NUMBER                           NOT NULL,
  COMMENTS     VARCHAR2(1000 BYTE)
)
TABLESPACE SYSTEM
RESULT_CACHE (MODE DEFAULT)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOCOMPRESS ;


--
-- TC_USERMAPPING  (Table) 
--
CREATE TABLE BCM.TC_USERMAPPING
(
  PROJECT_ID  NUMBER                            NOT NULL,
  USERNAME    VARCHAR2(30 BYTE),
  "SCHEMA"    VARCHAR2(30 BYTE)
)
TABLESPACE SYSTEM
RESULT_CACHE (MODE DEFAULT)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOCOMPRESS ;


--
-- TC_ALL_OBJECTS  (Table) 
--
CREATE TABLE BCM.TC_ALL_OBJECTS
(
  PROJECT_ID             NUMBER                 NOT NULL,
  PROJECT_NAME           VARCHAR2(255 BYTE)     NOT NULL,
  WORKDIR                VARCHAR2(2000 BYTE),
  CREATION_DATE          DATE                   NOT NULL,
  LAST_MODIFIED_DATE     DATE,
  AUTHOR                 VARCHAR2(30 BYTE),
  CHECKED_OUT            INTEGER,
  CHECKED_OUT_TIMESTAMP  DATE,
  CHECKED_OUT_BY         VARCHAR2(30 BYTE),
  CHECKED_IN_TIMESTAMP   DATE,
  VCP_PROJECT            VARCHAR2(2000 BYTE),
  VCS_DB                 VARCHAR2(2000 BYTE),
  FROZEN                 VARCHAR2(1 BYTE)       DEFAULT 'N',
  FROZEN_BY              VARCHAR2(30 BYTE),
  FROZEN_TIMESTAMP       DATE,
  VERSION                VARCHAR2(6 BYTE)
)
TABLESPACE SYSTEM
RESULT_CACHE (MODE DEFAULT)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOCOMPRESS ;


--
-- TC_ALL_OBJ_MASK  (Table) 
--
CREATE TABLE BCM.TC_ALL_OBJ_MASK
(
  PROJECT_ID   NUMBER                           NOT NULL,
  OBJECT_NAME  VARCHAR2(2000 BYTE)              NOT NULL,
  OBJECT_TYPE  NUMBER                           NOT NULL,
  SCHEMA_NAME  VARCHAR2(30 BYTE)                NOT NULL,
  EXCLUDE      NUMBER                           NOT NULL,
  COMMENTS     VARCHAR2(1000 BYTE)
)
TABLESPACE SYSTEM
RESULT_CACHE (MODE DEFAULT)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOCOMPRESS ;


--
-- TC_CONFIG  (Table) 
--
CREATE TABLE BCM.TC_CONFIG
(
  OPTIONS                VARCHAR2(16 BYTE),
  SET_WORKING_DIRECTORY  VARCHAR2(2000 BYTE),
  SCRIPT_EXT             VARCHAR2(255 BYTE),
  VCS_VCP_NAME           NUMBER,
  VCS_DB                 VARCHAR2(255 BYTE),
  VCS_SUB_VCP            VARCHAR2(255 BYTE),
  FROZEN                 VARCHAR2(1 BYTE),
  FROZEN_BY              VARCHAR2(30 BYTE),
  FROZEN_TIMESTAMP       DATE,
  VERSION                VARCHAR2(16 BYTE),
  VCP_INITEXT            VARCHAR2(2000 BYTE)
)
TABLESPACE SYSTEM
RESULT_CACHE (MODE DEFAULT)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOCOMPRESS ;


--
-- TC_TIMESTAMP  (Table) 
--
CREATE TABLE BCM.TC_TIMESTAMP
(
  TP_TIMESTAMP       DATE,
  PROJECT_TIMESTAMP  DATE,
  UM_TIMESTAMP       DATE
)
TABLESPACE SYSTEM
RESULT_CACHE (MODE DEFAULT)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOCOMPRESS ;


--
-- SYS$SERVICE_METRICS  (Queue) 
--
BEGIN
  SYS.DBMS_AQADM.CREATE_QUEUE
  (
    QUEUE_NAME          =>   'BCM.SYS$SERVICE_METRICS'
   ,QUEUE_TABLE         =>   'BCM.SYS$SERVICE_METRICS_TAB'
   ,QUEUE_TYPE          =>   SYS.DBMS_AQADM.NORMAL_QUEUE
   ,MAX_RETRIES         =>   5
   ,RETRY_DELAY         =>   0
   ,RETENTION_TIME      =>   3600
   );
END;
/

BEGIN
  SYS.DBMS_AQADM.START_QUEUE
  (
    QUEUE_NAME => 'BCM.SYS$SERVICE_METRICS'
   ,ENQUEUE => TRUE 
   ,DEQUEUE => TRUE 
   );
END;
/


--
-- AQ_PROP_NOTIFY  (Queue) 
--
BEGIN
  SYS.DBMS_AQADM.CREATE_QUEUE
  (
    QUEUE_NAME          =>   'BCM.AQ_PROP_NOTIFY'
   ,QUEUE_TABLE         =>   'BCM.AQ_PROP_TABLE'
   ,QUEUE_TYPE          =>   SYS.DBMS_AQADM.NORMAL_QUEUE
   ,MAX_RETRIES         =>   5
   ,RETRY_DELAY         =>   0
   ,RETENTION_TIME      =>   0
   ,COMMENT             =>   'Queue for Notifying events in AQ Prop. Scheduling'
   );
END;
/

BEGIN
  SYS.DBMS_AQADM.START_QUEUE
  (
    QUEUE_NAME => 'BCM.AQ_PROP_NOTIFY'
   ,ENQUEUE => TRUE 
   ,DEQUEUE => TRUE 
   );
END;
/


--
-- AQ_EVENT_TABLE_Q  (Queue) 
--
BEGIN
  SYS.DBMS_AQADM.CREATE_QUEUE
  (
    QUEUE_NAME          =>   'BCM.AQ_EVENT_TABLE_Q'
   ,QUEUE_TABLE         =>   'BCM.AQ_EVENT_TABLE'
   ,QUEUE_TYPE          =>   SYS.DBMS_AQADM.NORMAL_QUEUE
   ,MAX_RETRIES         =>   5
   ,RETRY_DELAY         =>   0
   ,RETENTION_TIME      =>   0
   ,COMMENT             =>   'CREATING AQ_EVENT_TABLE_Q QUEUE'
   );
END;
/

BEGIN
  SYS.DBMS_AQADM.START_QUEUE
  (
    QUEUE_NAME => 'BCM.AQ_EVENT_TABLE_Q'
   ,ENQUEUE => TRUE 
   ,DEQUEUE => TRUE 
   );
END;
/


--
-- SRVQUEUE  (Queue) 
--
BEGIN
  SYS.DBMS_AQADM.CREATE_NP_QUEUE
  (
    QUEUE_NAME          =>   'BCM.SRVQUEUE'
   ,MULTIPLE_CONSUMERS  =>   TRUE
   );
END;
/

BEGIN
  SYS.DBMS_AQADM.START_QUEUE
  (
    QUEUE_NAME => 'BCM.SRVQUEUE'
   ,ENQUEUE => TRUE 
   ,DEQUEUE => TRUE 
   );
END;
/


--
-- ALERT_QUE  (Queue) 
--
BEGIN
  SYS.DBMS_AQADM.CREATE_QUEUE
  (
    QUEUE_NAME          =>   'BCM.ALERT_QUE'
   ,QUEUE_TABLE         =>   'BCM.ALERT_QT'
   ,QUEUE_TYPE          =>   SYS.DBMS_AQADM.NORMAL_QUEUE
   ,MAX_RETRIES         =>   5
   ,RETRY_DELAY         =>   0
   ,RETENTION_TIME      =>   0
   ,COMMENT             =>   'Server Generated Alert Queue'
   );
END;
/

BEGIN
  SYS.DBMS_AQADM.START_QUEUE
  (
    QUEUE_NAME => 'BCM.ALERT_QUE'
   ,ENQUEUE => TRUE 
   ,DEQUEUE => TRUE 
   );
END;
/


--
-- SCHEDULER_FILEWATCHER_Q  (Queue) 
--
BEGIN
  SYS.DBMS_AQADM.CREATE_QUEUE
  (
    QUEUE_NAME          =>   'BCM.SCHEDULER_FILEWATCHER_Q'
   ,QUEUE_TABLE         =>   'BCM.SCHEDULER_FILEWATCHER_QT'
   ,QUEUE_TYPE          =>   SYS.DBMS_AQADM.NORMAL_QUEUE
   ,MAX_RETRIES         =>   5
   ,RETRY_DELAY         =>   0
   ,RETENTION_TIME      =>   0
   ,COMMENT             =>   'Scheduler file watcher results queue'
   );
END;
/

BEGIN
  SYS.DBMS_AQADM.START_QUEUE
  (
    QUEUE_NAME => 'BCM.SCHEDULER_FILEWATCHER_Q'
   ,ENQUEUE => TRUE 
   ,DEQUEUE => TRUE 
   );
END;
/


--
-- SCHEDULER$_REMDB_JOBQ  (Queue) 
--
BEGIN
  SYS.DBMS_AQADM.CREATE_QUEUE
  (
    QUEUE_NAME          =>   'BCM.SCHEDULER$_REMDB_JOBQ'
   ,QUEUE_TABLE         =>   'BCM.SCHEDULER$_REMDB_JOBQTAB'
   ,QUEUE_TYPE          =>   SYS.DBMS_AQADM.NORMAL_QUEUE
   ,MAX_RETRIES         =>   5
   ,RETRY_DELAY         =>   0
   ,RETENTION_TIME      =>   0
   ,COMMENT             =>   'Scheduler remote db job queue'
   );
END;
/

BEGIN
  SYS.DBMS_AQADM.START_QUEUE
  (
    QUEUE_NAME => 'BCM.SCHEDULER$_REMDB_JOBQ'
   ,ENQUEUE => TRUE 
   ,DEQUEUE => TRUE 
   );
END;
/


--
-- SCHEDULER$_EVENT_QUEUE  (Queue) 
--
BEGIN
  SYS.DBMS_AQADM.CREATE_QUEUE
  (
    QUEUE_NAME          =>   'BCM.SCHEDULER$_EVENT_QUEUE'
   ,QUEUE_TABLE         =>   'BCM.SCHEDULER$_EVENT_QTAB'
   ,QUEUE_TYPE          =>   SYS.DBMS_AQADM.NORMAL_QUEUE
   ,MAX_RETRIES         =>   5
   ,RETRY_DELAY         =>   0
   ,RETENTION_TIME      =>   3600
   ,COMMENT             =>   'Scheduler event queue'
   );
END;
/

BEGIN
  SYS.DBMS_AQADM.START_QUEUE
  (
    QUEUE_NAME => 'BCM.SCHEDULER$_EVENT_QUEUE'
   ,ENQUEUE => TRUE 
   ,DEQUEUE => TRUE 
   );
END;
/


--
-- TC_ALL_OBJ_MASK_PK  (Index) 
--
CREATE UNIQUE INDEX BCM.TC_ALL_OBJ_MASK_PK ON BCM.TC_ALL_OBJ_MASK
(PROJECT_ID, OBJECT_NAME, OBJECT_TYPE, SCHEMA_NAME, EXCLUDE)
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           );


--
-- TC_MASK_PK  (Index) 
--
CREATE UNIQUE INDEX BCM.TC_MASK_PK ON BCM.TC_MASK
(PROJECT_ID, OBJECT_NAME, OBJECT_TYPE, SCHEMA_NAME, EXCLUDE)
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           );


--
-- TC_OBJSTATUS_VCS_PK  (Index) 
--
CREATE UNIQUE INDEX BCM.TC_OBJSTATUS_VCS_PK ON BCM.TC_OBJSTATUS_VCS
(PSL_OBJECT_ID)
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           );


--
-- TC_OBJSTATUS_NDX  (Index) 
--
CREATE UNIQUE INDEX BCM.TC_OBJSTATUS_NDX ON BCM.TC_OBJSTATUS
(PSL_OBJECT_ID, PSL_CHECKED_OUT, PSL_FROZEN, PSL_CHECKED_OUT_BY)
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           );


--
-- TC_OBJSTATUS_PK  (Index) 
--
CREATE UNIQUE INDEX BCM.TC_OBJSTATUS_PK ON BCM.TC_OBJSTATUS
(PSL_OBJECT_ID)
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           );


--
-- PO_LINE_TBL_PK  (Index) 
--
CREATE UNIQUE INDEX BCM.PO_LINE_TBL_PK ON BCM.PO_LINE_TBL
(PO_ID, PO_LINE)
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           );


--
-- SUPPLIER_TBL_U01  (Index) 
--
CREATE UNIQUE INDEX BCM.SUPPLIER_TBL_U01 ON BCM.SUPPLIER_TBL
(SUPP_NAME)
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           );


--
-- INVOICE_TBL_PK  (Index) 
--
CREATE UNIQUE INDEX BCM.INVOICE_TBL_PK ON BCM.INVOICE_TBL
(INVOICE_ID)
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           );


--
-- PO_HDR_TBL_PK  (Index) 
--
CREATE UNIQUE INDEX BCM.PO_HDR_TBL_PK ON BCM.PO_HDR_TBL
(PO_ID)
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           );


--
-- SUPPLIER_TBL_PK  (Index) 
--
CREATE UNIQUE INDEX BCM.SUPPLIER_TBL_PK ON BCM.SUPPLIER_TBL
(SUPP_ID)
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           );


--
-- TC_TIMESTAMP_OBJSTATUS  (Trigger) 
--
CREATE OR REPLACE TRIGGER BCM.TC_TIMESTAMP_OBJSTATUS 
  AFTER INSERT OR DELETE OR UPDATE 
  ON BCM.tc_objstatus 
  REFERENCING OLD AS OLD NEW AS NEW
BEGIN 
  UPDATE BCM.tc_timestamp 
     SET tp_timestamp = SYSDATE; 
END;
/


--
-- TC_TIMESTAMP_MASK  (Trigger) 
--
CREATE OR REPLACE TRIGGER BCM.TC_TIMESTAMP_MASK 
  AFTER INSERT OR DELETE OR UPDATE 
  ON BCM.tc_mask 
  REFERENCING OLD AS OLD NEW AS NEW
BEGIN 
  UPDATE BCM.tc_timestamp 
     SET project_timestamp = SYSDATE; 
END;
/


--
-- TC_TIMESTAMP_GROUP  (Trigger) 
--
CREATE OR REPLACE TRIGGER BCM.TC_TIMESTAMP_GROUP 
  AFTER INSERT OR DELETE OR UPDATE 
  ON BCM.tc_group 
  REFERENCING OLD AS OLD NEW AS NEW
BEGIN 
  UPDATE BCM.tc_timestamp 
     SET project_timestamp = SYSDATE; 
END;
/


--
-- TC_TIMESTAMP_USERMAPPING  (Trigger) 
--
CREATE OR REPLACE TRIGGER BCM.TC_TIMESTAMP_USERMAPPING 
  AFTER INSERT OR UPDATE OR DELETE 
  ON BCM.tc_usermapping 
  REFERENCING NEW AS NEW OLD AS OLD
BEGIN 
  UPDATE BCM.tc_timestamp 
     SET um_timestamp = SYSDATE; 
END;
/


--
-- TC_DELETE_GROUP  (Trigger) 
--
CREATE OR REPLACE TRIGGER BCM.TC_DELETE_GROUP 
  BEFORE DELETE 
  ON BCM.tc_group 
  REFERENCING OLD AS OLD NEW AS NEW 
  FOR EACH ROW
BEGIN 
  DELETE FROM BCM.tc_mask 
        WHERE project_id = :OLD.project_id; 
  /* the tc_delete_obj trigger (below) takes care of the tc_objstatus table */   
END;
/


--
-- TC_DELETE_OBJ  (Trigger) 
--
CREATE OR REPLACE TRIGGER BCM.TC_DELETE_OBJ 
  BEFORE DELETE 
  ON BCM.tc_objstatus_vcs 
  REFERENCING NEW AS NEW OLD AS OLD 
  FOR EACH ROW
begin 
  DELETE FROM BCM.tc_objstatus 
        WHERE psl_object_id = :OLD.psl_object_id; 
end;
/


--
-- XXBCM_ORDER_MGT  (Synonym) 
--
CREATE SYNONYM BCM.XXBCM_ORDER_MGT FOR SYS.XXBCM_ORDER_MGT;


--
-- BCM  (Synonym) 
--
CREATE PUBLIC SYNONYM BCM FOR BCM.BCM;


--
-- INVOICE_TBL  (Synonym) 
--
CREATE PUBLIC SYNONYM INVOICE_TBL FOR BCM.INVOICE_TBL;


--
-- PO_HDR_TBL  (Synonym) 
--
CREATE PUBLIC SYNONYM PO_HDR_TBL FOR BCM.PO_HDR_TBL;


--
-- PO_LINE_TBL  (Synonym) 
--
CREATE PUBLIC SYNONYM PO_LINE_TBL FOR BCM.PO_LINE_TBL;


--
-- QUEST_COM_TEAM_CODING  (Synonym) 
--
CREATE PUBLIC SYNONYM QUEST_COM_TEAM_CODING FOR BCM.TC_CONFIG;


--
-- SEQ_INV  (Synonym) 
--
CREATE PUBLIC SYNONYM SEQ_INV FOR BCM.SEQ_INV;


--
-- SEQ_SUPP  (Synonym) 
--
CREATE PUBLIC SYNONYM SEQ_SUPP FOR BCM.SEQ_SUPP;


--
-- SUPPLIER_TBL  (Synonym) 
--
CREATE PUBLIC SYNONYM SUPPLIER_TBL FOR BCM.SUPPLIER_TBL;


--
-- PO_TBL_TYPE  (Type) 
--
CREATE OR REPLACE TYPE BCM.PO_TBL_TYPE IS TABLE OF po_type;
/

--
-- BCM  (Package) 
--
CREATE OR REPLACE PACKAGE BCM.BCM
AS
   /******************************************************************************
      NAME:       BCM
      PURPOSE:

      REVISIONS:
      Ver        Date        Author           Description
      ---------  ----------  ---------------  ------------------------------------
      1.0        16/10/2020      user       1. Created this package.
   ******************************************************************************/
   /*Generate Supplier ID for Suppliers*/
   FUNCTION get_supp_val
      RETURN VARCHAR2;

   /*Generate Invoice ID for Invoices*/
   FUNCTION get_inv_val
      RETURN VARCHAR2;

   /*Replace character to numbers*/
   FUNCTION multiple_replace (in_text IN VARCHAR2)
      RETURN VARCHAR2;

   /* Return details for the THIRD (3rd) highest Order Total Amount from the list*/
   FUNCTION Get_Third_Highest_Amt_PO
      RETURN VARCHAR2;

   /*Migration process that will extract information from table "XXBCM_ORDER_MGT"*/
   PROCEDURE LOAD_TBL;

   /*Report displaying a summary of Orders with their corresponding list of distinct invoices and their total amount */
   PROCEDURE GET_ORDER_SUMMARY;

   /*List all suppliers with their respective number of orders and total amount ordered from them between the period of 01 January 2017 and 31 August 2017*/
   PROCEDURE GET_SUPP_LIST;
END BCM;
/

--
-- BCM  (Package Body) 
--
CREATE OR REPLACE PACKAGE BODY BCM.BCM
AS
   /******************************************************************************
      NAME:       BCM
      PURPOSE:

      REVISIONS:
      Ver        Date        Author           Description
      ---------  ----------  ---------------  ------------------------------------
      1.0        16/10/2020      user       1. Created this package body.
   ******************************************************************************/
   /*Generate Supplier ID for Suppliers*/
   FUNCTION get_supp_val
      RETURN VARCHAR2
   AS
      supp_val   VARCHAR2 (5);
   BEGIN
      supp_val := 'S' || LPAD (SEQ_SUPP.NEXTVAL, 4, '0');
      RETURN supp_val;
   END;

   /*Generate Invoice ID for Invoices*/
   FUNCTION get_inv_val
      RETURN VARCHAR2
   AS
      inv_val   VARCHAR2 (6);
   BEGIN
      inv_val := 'INV' || LPAD (SEQ_INV.NEXTVAL, 3, '0');
      RETURN inv_val;
   END;

   /*Replace character to numbers*/
   FUNCTION multiple_replace (in_text IN VARCHAR2)
      RETURN VARCHAR2
   AS
      v_result   VARCHAR2 (32767);
   BEGIN
      v_result := UPPER (in_text);


      v_result :=
         REPLACE (REPLACE (REPLACE (v_result, 'I', 1), 'S', 5), 'O', 0);


      RETURN v_result;
   END;

   /* Return details for the THIRD (3rd) highest Order Total Amount from the list*/
   FUNCTION Get_Third_Highest_Amt_PO
      RETURN VARCHAR2
   IS
      L_PO            VARCHAR2 (5);
      L_PO_DT         VARCHAR2 (50);
      L_SUPP_NAME     VARCHAR2 (255);
      L_PO_AMT        VARCHAR2 (100);
      L_PO_STATUS     VARCHAR2 (50);
      L_INVOICE_REF   VARCHAR2 (255);
      L_STRIMG        VARCHAR2 (1000);
   BEGIN
      SELECT PO,
             PO_DT,
             SUPP_NAME,
             TRIM (PO_AMT),
             PO_STATUS,
             INVOICE_REF
        INTO L_PO,
             L_PO_DT,
             L_SUPP_NAME,
             L_PO_AMT,
             L_PO_STATUS,
             L_INVOICE_REF
        FROM (SELECT det.*, ROWNUM rnum
                FROM (  SELECT PO,
                               PO_DT,
                               SUPP_NAME,
                               PO_AMT,
                               PO_STATUS,
                               LISTAGG (INVOICE_REF, ', ')
                                  WITHIN GROUP (ORDER BY INVOICE_REF)
                                  AS INVOICE_REF
                          FROM (  SELECT DISTINCT
                                         REPLACE (
                                            REGEXP_REPLACE (H.PO_ID,
                                                            '[^0-9]',
                                                            ''),
                                            0,
                                            '')
                                            PO,
                                         TO_CHAR (H.PO_DATE, 'Month DD,YYYY')
                                            PO_DT,
                                         UPPER (S.SUPP_NAME) SUPP_NAME,
                                         TO_CHAR (H.PO_AMT, '99,999,990.00')
                                            PO_AMT,
                                         H.PO_STATUS,
                                         I.INVOICE_REF
                                    FROM PO_HDR_TBL H,
                                         SUPPLIER_TBL S,
                                         INVOICE_TBL I
                                   WHERE     H.SUPP_ID = S.SUPP_ID
                                         AND H.po_id = I.po_id
                                ORDER BY TO_CHAR (H.PO_AMT, '99,999,990.00') DESC)
                      GROUP BY PO,
                               PO_DT,
                               SUPP_NAME,
                               PO_AMT,
                               PO_STATUS
                      ORDER BY PO_AMT DESC) det
               WHERE ROWNUM <= 3)
       WHERE rnum >= 3;

      L_STRIMG :=
            'Order Reference: '
         || L_PO
         || CHR (10)
         || 'Order Date: '
         || L_PO_DT
         || CHR (10)
         || 'Supplier Name: '
         || L_SUPP_NAME
         || CHR (10)
         || 'Order Total Amount: '
         || L_PO_AMT
         || CHR (10)
         || 'Order Status: '
         || L_PO_STATUS
         || CHR (10)
         || 'Invoice References: '
         || L_INVOICE_REF;
      RETURN L_STRIMG;
   END;

   /*Migration process that will extract information from table "XXBCM_ORDER_MGT"*/
   PROCEDURE LOAD_TBL
   IS
   BEGIN
      FOR i
         IN (SELECT DISTINCT
                    supplier_name,
                    supp_contact_name,
                    supp_address,
                    multiple_replace (
                       RTRIM (TRIM (REGEXP_SUBSTR (supp_contact_number,
                                                   '[^,]+',
                                                   1,
                                                   1)),
                              '.'))
                       AS contact1,
                    multiple_replace (
                       RTRIM (TRIM (REGEXP_SUBSTR (supp_contact_number,
                                                   '[^,]+',
                                                   1,
                                                   2)),
                              '.'))
                       AS contact2,
                    supp_email
               FROM XXBCM_ORDER_MGT)
      LOOP
         INSERT INTO supplier_tbl
              VALUES (get_supp_val,
                      i.supplier_name,
                      i.supp_contact_name,
                      i.supp_address,
                      i.contact1,
                      i.contact2,
                      i.supp_email);
      END LOOP;

      INSERT INTO PO_HDR_TBL
         SELECT REGEXP_SUBSTR (M.ORDER_REF,
                               '[^-]+',
                               1,
                               1)
                   ORDER_REF,
                TO_DATE (M.ORDER_DATE, 'DD/MM/YYYY') PO_DATE,
                S.SUPP_ID,
                M.ORDER_DESCRIPTION,
                TO_NUMBER (TRIM (REPLACE (M.ORDER_TOTAL_AMOUNT, ',', '')))
                   PO_AMT,
                M.ORDER_STATUS,
                M.ORDER_REF
           FROM XXBCM_ORDER_MGT M, SUPPLIER_TBL S
          WHERE     REGEXP_SUBSTR (M.ORDER_REF,
                                   '[^-]+',
                                   1,
                                   2)
                       IS NULL
                AND M.SUPPLIER_NAME = S.SUPP_NAME;

      FOR j
         IN (  SELECT ORDER_REF,
                      ROW_NUMBER ()
                         OVER (PARTITION BY ORDER_REF ORDER BY ORDER_REF)
                         PO_LN,
                      PO_DATE,
                      ORDER_DESCRIPTION,
                      SUM (PO_AMT) PO_AMT,
                      SUM (PO_LN_AMT) PO_LN_AMT,
                      ORDER_STATUS,
                      PO_REF
                 FROM (SELECT REGEXP_SUBSTR (ORDER_REF,
                                             '[^-]+',
                                             1,
                                             1)
                                 ORDER_REF,
                              TO_NUMBER (REGEXP_SUBSTR (ORDER_REF,
                                                        '[^-]+',
                                                        1,
                                                        2))
                                 PO_LN,
                              TO_DATE (ORDER_DATE, 'DD/MM/YYYY') PO_DATE,
                              ORDER_DESCRIPTION,
                              TO_NUMBER (
                                 TRIM (REPLACE (ORDER_TOTAL_AMOUNT, ',', '')))
                                 PO_AMT,
                              TO_NUMBER (
                                 TRIM (
                                    bcm.multiple_replace (
                                       REPLACE (ORDER_LINE_AMOUNT, ',', ''))))
                                 PO_LN_AMT,
                              ORDER_STATUS,
                              ORDER_REF PO_REF
                         FROM XXBCM_ORDER_MGT
                        WHERE REGEXP_SUBSTR (ORDER_REF,
                                             '[^-]+',
                                             1,
                                             2)
                                 IS NOT NULL)
             GROUP BY ORDER_REF,
                      PO_LN,
                      PO_DATE,
                      ORDER_DESCRIPTION,
                      ORDER_STATUS,
                      PO_REF
             ORDER BY PO_REF, PO_LN)
      LOOP
         INSERT INTO PO_LINE_TBL
              VALUES (j.ORDER_REF,
                      j.PO_LN,
                      j.PO_DATE,
                      j.ORDER_DESCRIPTION,
                      j.PO_AMT,
                      j.PO_LN_AMT,
                      j.ORDER_STATUS,
                      j.PO_REF);
      END LOOP;

      INSERT INTO INVOICE_TBL
         SELECT get_inv_val,
                P.PO_ID,
                P.PO_LINE,
                M.INVOICE_REFERENCE,
                TO_DATE (INVOICE_DATE, 'DD/MM/YYYY') INV_DATE,
                M.INVOICE_STATUS,
                M.INVOICE_HOLD_REASON,
                TO_NUMBER (
                   TRIM (
                      multiple_replace (REPLACE (M.INVOICE_AMOUNT, ',', ''))))
                   INV_AMT,
                M.INVOICE_DESCRIPTION,
                M.ORDER_REF
           FROM XXBCM_ORDER_MGT M, PO_LINE_TBL P
          WHERE     REGEXP_SUBSTR (M.ORDER_REF,
                                   '[^-]+',
                                   1,
                                   1) = P.PO_ID
                AND M.ORDER_REF = P.PO_REF
                AND M.INVOICE_REFERENCE IS NOT NULL;

      COMMIT;
   END;

   /*Report displaying a summary of Orders with their corresponding list of distinct invoices and their total amount */
   PROCEDURE GET_ORDER_SUMMARY
   IS
   BEGIN
      DBMS_OUTPUT.PUT_LINE (
         '|----------------------------------------------|' || CHR (10));

      FOR i
         IN (  SELECT REPLACE (REGEXP_REPLACE (PO_ID, '[^0-9]', ''), 0, '')
                         PO_ID,
                      TO_CHAR (PO_DATE, 'MON-DD') PO_DT,
                      SUPP_NAME,
                      TRIM (TO_CHAR (PO_AMT, '99,999,990.00')) PO_AMT,
                      PO_STATUS,
                      INVOICE_REF,
                      TRIM (TO_CHAR (INVOICE_AMT, '99,999,990.00')) INV_AMT,
                      ACTION
                 FROM (  SELECT DISTINCT
                                H.PO_ID,
                                H.PO_DATE,
                                INITCAP (S.SUPP_NAME) SUPP_NAME,
                                H.PO_AMT,
                                H.PO_STATUS,
                                I.INVOICE_REF,
                                SUM (I.INVOICE_AMT) INVOICE_AMT,
                                CASE
                                   WHEN I.INVOICE_STATUS = 'Paid'
                                   THEN
                                      'OK'
                                   WHEN I.INVOICE_STATUS = 'Pending'
                                   THEN
                                      'To follow up'
                                   ELSE
                                      'To verify'
                                END
                                   ACTION
                           FROM PO_HDR_TBL H, SUPPLIER_TBL S, INVOICE_TBL I
                          WHERE H.SUPP_ID = S.SUPP_ID AND H.PO_ID = I.PO_ID
                       GROUP BY H.PO_ID,
                                H.PO_DATE,
                                S.SUPP_NAME,
                                H.PO_AMT,
                                H.PO_STATUS,
                                I.INVOICE_REF,
                                I.INVOICE_STATUS)
             ORDER BY TO_CHAR (PO_DATE, 'MON-DD') DESC)
      LOOP
         DBMS_OUTPUT.PUT_LINE (
               'Order Reference:  '
            || i.PO_ID
            || CHR (10)
            || 'Order Period:  '
            || i.PO_DT
            || CHR (10)
            || 'Supplier Name: '
            || i.SUPP_NAME
            || CHR (10)
            || 'Order Total Amount: '
            || i.PO_AMT
            || CHR (10)
            || 'Order Status: '
            || i.PO_STATUS
            || CHR (10)
            || 'Invoice Reference: '
            || i.INVOICE_REF
            || CHR (10)
            || 'Invoice Total Amount: '
            || i.INV_AMT
            || CHR (10)
            || 'Action: '
            || i.ACTION
            || CHR (10));
         DBMS_OUTPUT.PUT_LINE (
            '|----------------------------------------------|' || CHR (10));
      END LOOP;
   END;

   /* List all suppliers with their respective number of orders and total amount ordered from them between the period of 01 January 2017 and 31 August 2017*/
   PROCEDURE GET_SUPP_LIST
   IS
   BEGIN
      DBMS_OUTPUT.PUT_LINE (
         '|----------------------------------------------|' || CHR (10));

      FOR i
         IN (  SELECT S.SUPP_NAME,
                      S.SUPP_CNTCT_NAME,
                      CASE
                         WHEN LENGTH (S.SUPP_CNTCT_NUM1) = 7
                         THEN
                               REPLACE (SUBSTR (S.SUPP_CNTCT_NUM1, 1, 3),
                                        ' ',
                                        '')
                            || '-'
                            || REPLACE (SUBSTR (S.SUPP_CNTCT_NUM1, 4), ' ', '')
                         WHEN LENGTH (S.SUPP_CNTCT_NUM1) > 7
                         THEN
                               REPLACE (SUBSTR (S.SUPP_CNTCT_NUM1, 1, 4),
                                        ' ',
                                        '')
                            || '-'
                            || REPLACE (SUBSTR (S.SUPP_CNTCT_NUM1, 5, 8),
                                        ' ',
                                        '')
                      END
                         SUPP_NUM1,
                      CASE
                         WHEN LENGTH (S.SUPP_CNTCT_NUM2) = 7
                         THEN
                               REPLACE (SUBSTR (S.SUPP_CNTCT_NUM2, 1, 3),
                                        ' ',
                                        '')
                            || '-'
                            || REPLACE (SUBSTR (S.SUPP_CNTCT_NUM2, 4), ' ', '')
                         WHEN LENGTH (S.SUPP_CNTCT_NUM2) > 7
                         THEN
                               REPLACE (SUBSTR (S.SUPP_CNTCT_NUM2, 1, 4),
                                        ' ',
                                        '')
                            || '-'
                            || REPLACE (SUBSTR (S.SUPP_CNTCT_NUM2, 5, 8),
                                        ' ',
                                        '')
                      END
                         SUPP_NUM2,
                      COUNT (H.PO_ID) PO_CNT,
                      TRIM (TO_CHAR (SUM (H.PO_AMT), '99,999,990.00')) PO_AMT
                 FROM PO_HDR_TBL H, SUPPLIER_TBL S
                WHERE     H.SUPP_ID = S.SUPP_ID
                      AND H.PO_DATE BETWEEN TO_DATE ('01/01/2017',
                                                     'DD/MM/YYYY')
                                        AND TO_DATE ('31/08/2017',
                                                     'DD/MM/YYYY')
             GROUP BY S.SUPP_NAME,
                      S.SUPP_CNTCT_NAME,
                      S.SUPP_CNTCT_NUM1,
                      S.SUPP_CNTCT_NUM2)
      LOOP
         DBMS_OUTPUT.PUT_LINE (
               'Supplier Name:  '
            || i.SUPP_NAME
            || CHR (10)
            || 'Supplier Contact Name:  '
            || i.SUPP_CNTCT_NAME
            || CHR (10)
            || 'Supplier Contact No. 1: '
            || i.SUPP_NUM1
            || CHR (10)
            || 'Supplier Contact No. 2: '
            || i.SUPP_NUM2
            || CHR (10)
            || 'Total Orders: '
            || i.PO_CNT
            || CHR (10)
            || 'Order Total Amount: '
            || i.PO_AMT
            || CHR (10));
         DBMS_OUTPUT.PUT_LINE (
            '|----------------------------------------------|' || CHR (10));
      END LOOP;
   END;
END BCM;
/

-- 
-- Non Foreign Key Constraints for Table SUPPLIER_TBL 
-- 
ALTER TABLE BCM.SUPPLIER_TBL ADD (
  CONSTRAINT SUPPLIER_TBL_PK
  PRIMARY KEY
  (SUPP_ID)
  USING INDEX BCM.SUPPLIER_TBL_PK
  ENABLE VALIDATE);

ALTER TABLE BCM.SUPPLIER_TBL ADD (
  CONSTRAINT SUPPLIER_TBL_U01
  UNIQUE (SUPP_NAME)
  USING INDEX BCM.SUPPLIER_TBL_U01
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table PO_HDR_TBL 
-- 
ALTER TABLE BCM.PO_HDR_TBL ADD (
  CONSTRAINT PO_HDR_TBL_PK
  PRIMARY KEY
  (PO_ID)
  USING INDEX BCM.PO_HDR_TBL_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table INVOICE_TBL 
-- 
ALTER TABLE BCM.INVOICE_TBL ADD (
  CONSTRAINT INVOICE_TBL_PK
  PRIMARY KEY
  (INVOICE_ID)
  USING INDEX BCM.INVOICE_TBL_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table PO_LINE_TBL 
-- 
ALTER TABLE BCM.PO_LINE_TBL ADD (
  CONSTRAINT PO_LINE_TBL_PK
  PRIMARY KEY
  (PO_ID, PO_LINE)
  USING INDEX BCM.PO_LINE_TBL_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table TC_FILEEXT 
-- 
ALTER TABLE BCM.TC_FILEEXT ADD (
  PRIMARY KEY
  (VCS_OBJTYPE)
  USING INDEX
    TABLESPACE SYSTEM
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                FREELISTS        1
                FREELIST GROUPS  1
                BUFFER_POOL      DEFAULT
                FLASH_CACHE      DEFAULT
                CELL_FLASH_CACHE DEFAULT
               )
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table TC_OBJSTATUS 
-- 
ALTER TABLE BCM.TC_OBJSTATUS ADD (
  CONSTRAINT TC_OBJSTATUS_PK
  PRIMARY KEY
  (PSL_OBJECT_ID)
  USING INDEX BCM.TC_OBJSTATUS_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table TC_OBJSTATUS_VCS 
-- 
ALTER TABLE BCM.TC_OBJSTATUS_VCS ADD (
  CONSTRAINT TC_OBJSTATUS_VCS_PK
  PRIMARY KEY
  (PSL_OBJECT_ID)
  USING INDEX BCM.TC_OBJSTATUS_VCS_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table TC_GROUP 
-- 
ALTER TABLE BCM.TC_GROUP ADD (
  PRIMARY KEY
  (PROJECT_ID)
  USING INDEX
    TABLESPACE SYSTEM
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                FREELISTS        1
                FREELIST GROUPS  1
                BUFFER_POOL      DEFAULT
                FLASH_CACHE      DEFAULT
                CELL_FLASH_CACHE DEFAULT
               )
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table TC_MASK 
-- 
ALTER TABLE BCM.TC_MASK ADD (
  CONSTRAINT TC_MASK_PK
  PRIMARY KEY
  (PROJECT_ID, OBJECT_NAME, OBJECT_TYPE, SCHEMA_NAME, EXCLUDE)
  USING INDEX BCM.TC_MASK_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table TC_ALL_OBJECTS 
-- 
ALTER TABLE BCM.TC_ALL_OBJECTS ADD (
  PRIMARY KEY
  (PROJECT_ID)
  USING INDEX
    TABLESPACE SYSTEM
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                FREELISTS        1
                FREELIST GROUPS  1
                BUFFER_POOL      DEFAULT
                FLASH_CACHE      DEFAULT
                CELL_FLASH_CACHE DEFAULT
               )
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table TC_ALL_OBJ_MASK 
-- 
ALTER TABLE BCM.TC_ALL_OBJ_MASK ADD (
  CONSTRAINT TC_ALL_OBJ_MASK_PK
  PRIMARY KEY
  (PROJECT_ID, OBJECT_NAME, OBJECT_TYPE, SCHEMA_NAME, EXCLUDE)
  USING INDEX BCM.TC_ALL_OBJ_MASK_PK
  ENABLE VALIDATE);


GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON BCM.SUPPLIER_TBL TO DBA;

GRANT READ, WRITE ON DIRECTORY DATA_PUMP_DIR TO EXP_FULL_DATABASE;

GRANT READ, WRITE ON DIRECTORY DATA_PUMP_DIR TO IMP_FULL_DATABASE;

GRANT READ, WRITE ON DIRECTORY ORACLE_OCM_CONFIG_DIR TO ORACLE_OCM;

GRANT SELECT ON BCM.TC_ALL_OBJECTS TO PUBLIC;

GRANT SELECT ON BCM.TC_ALL_OBJ_MASK TO PUBLIC;

GRANT SELECT ON BCM.TC_CONFIG TO PUBLIC;

GRANT SELECT, UPDATE ON BCM.TC_FILEEXT TO PUBLIC;

GRANT SELECT ON BCM.TC_GROUP TO PUBLIC;

GRANT SELECT ON BCM.TC_GROUP_ID TO PUBLIC;

GRANT SELECT ON BCM.TC_MASK TO PUBLIC;

GRANT DELETE, INSERT, SELECT, UPDATE ON BCM.TC_OBJSTATUS TO PUBLIC;

GRANT DELETE, INSERT, SELECT, UPDATE ON BCM.TC_OBJSTATUS_VCS TO PUBLIC;

GRANT SELECT ON BCM.TC_SCRIPT_ID TO PUBLIC;

GRANT DELETE, INSERT, SELECT, UPDATE ON BCM.TC_TIMESTAMP TO PUBLIC;

GRANT DELETE, INSERT, SELECT, UPDATE ON BCM.TC_USERMAPPING TO PUBLIC;

GRANT READ, WRITE ON DIRECTORY MYDIR TO PUBLIC;

GRANT DELETE, INSERT, SELECT, UPDATE ON BCM.TC_ALL_OBJECTS TO TC_ADMIN_ROLE;

GRANT DELETE, INSERT, SELECT, UPDATE ON BCM.TC_ALL_OBJ_MASK TO TC_ADMIN_ROLE;

GRANT DELETE, INSERT, SELECT, UPDATE ON BCM.TC_CONFIG TO TC_ADMIN_ROLE;

GRANT SELECT, UPDATE ON BCM.TC_FILEEXT TO TC_ADMIN_ROLE;

GRANT DELETE, INSERT, SELECT, UPDATE ON BCM.TC_GROUP TO TC_ADMIN_ROLE;

GRANT SELECT ON BCM.TC_GROUP_ID TO TC_ADMIN_ROLE;

GRANT DELETE, INSERT, SELECT, UPDATE ON BCM.TC_MASK TO TC_ADMIN_ROLE;

GRANT DELETE, INSERT, SELECT, UPDATE ON BCM.TC_OBJSTATUS TO TC_ADMIN_ROLE;
GRANT UPDATE (PSL_FROZEN) ON BCM.TC_OBJSTATUS TO TC_ADMIN_ROLE;
GRANT UPDATE (PSL_FROZEN_BY) ON BCM.TC_OBJSTATUS TO TC_ADMIN_ROLE;
GRANT UPDATE (PSL_FROZEN_TIMESTAMP) ON BCM.TC_OBJSTATUS TO TC_ADMIN_ROLE;

GRANT DELETE, INSERT, SELECT, UPDATE ON BCM.TC_OBJSTATUS_VCS TO TC_ADMIN_ROLE;

GRANT SELECT ON BCM.TC_SCRIPT_ID TO TC_ADMIN_ROLE;

GRANT DELETE, INSERT, SELECT, UPDATE ON BCM.TC_TIMESTAMP TO TC_ADMIN_ROLE;

GRANT DELETE, INSERT, SELECT, UPDATE ON BCM.TC_USERMAPPING TO TC_ADMIN_ROLE;

GRANT EXECUTE, DEBUG ON BCM.BCM TO DBA;